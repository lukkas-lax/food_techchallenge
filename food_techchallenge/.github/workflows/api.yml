name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'adopt'

    - name: Set up the Maven dependencies caching
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Install Maven dependencies
      working-directory: ./food_techchallenge
      run: mvn install
    
    # - name: docker login
    #   env:
    #     DOCKER_USER: ${{secrets.DOCKER_USER}}
    #     DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
    #   run: |
    #     docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
        
    # - name: Build the Docker image
    #   working-directory: ./food_techchallenge
    #   run: docker build . --file Dockerfile --tag raulima1/food_techchallenge
      
    # - name: Docker Push
    #   run: docker push ${{secrets.DOCKER_USER}}/food_techchallenge
    

    - name: Set short git commit SHA
      id: commit
      uses: prompt/actions-commit-hash@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{env.AWS_REGION}}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
        IMAGE_TAG: ${{ steps.commit.outputs.short }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f docker/Dockerfile .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Update kube config
      run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

    - name: Deploy to EKS
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
        IMAGE_TAG: ${{ steps.commit.outputs.short }}
      run: |
        sed -i.bak "s|DOCKER_IMAGE|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" manifests/hello-app-deployment.yaml && \
        kubectl apply -f manifests/hello-app-deployment.yaml
        kubectl apply -f manifests/hello-app-service.yaml